#include <stdio.h>
#include <stdlib.h>

// 연결 리스트의 노드를 정의합니다.
typedef struct NODE {
    int data;           // 노드의 데이터를 저장합니다.
    struct NODE *next;  // 다음 노드를 가리키는 포인터입니다.
} node;

// 노드를 추가하는 함수입니다.
void addNode(node* pnode, int data) {
    // 새로운 노드를 생성하고 메모리를 할당합니다.
    node* newNode = (node*)malloc(sizeof(node));
    // 새로운 노드에 데이터를 할당합니다.
    newNode->data = data;
    // 새로운 노드를 현재 노드의 다음 노드로 연결합니다.
    newNode->next = pnode->next;
    // 현재 노드의 다음 노드를 새로운 노드로 설정합니다.
    pnode->next = newNode;
}

// 연결 리스트의 모든 노드를 해제하는 함수입니다.
void freeList(node* head) {
    node* current = head->next; // HEAD 노드의 다음 노드부터 시작합니다.
    node* next;

    // 모든 노드를 순회하면서 메모리를 해제합니다.
    while (current != NULL) {
        next = current->next; // 현재 노드의 다음 노드를 임시로 저장합니다.
        free(current); // 현재 노드의 메모리를 해제합니다.
        current = next; // 다음 노드로 이동합니다.
    }

    // 모든 노드를 삭제한 후에 HEAD 노드의 메모리를 해제합니다.
    free(head);
}

// 연결 리스트의 모든 노드를 삭제하는 함수입니다.
void deleteNode(node* head) {
    node* current = head->next; // HEAD 노드의 다음 노드부터 시작합니다.
    node* next;

    // 모든 노드를 순회하면서 삭제합니다.
    while (current != NULL) {
        next = current->next; // 현재 노드의 다음 노드를 임시로 저장합니다.
        printf("%d\n",current->data); // 현재 노드의 데이터를 출력합니다.
        free(current); // 현재 노드의 메모리를 해제합니다.
        current = next; // 다음 노드로 이동합니다.
    }

    // 모든 노드를 삭제한 후에 HEAD 노드의 다음 노드를 NULL로 설정하여 리스트가 비었음을 표시합니다.
    head->next = NULL;
}

// 메인 함수입니다.
void main() {
    // HEAD 노드를 생성하고 초기화합니다.
    node* head = (node*)malloc(sizeof(node));
    head->data = 0; // HEAD 노드에 데이터를 할당합니다.
    head->next = NULL; // HEAD 노드의 다음 노드를 NULL로 설정합니다.

    // 새로운 노드를 추가합니다.
    addNode(head, 10); // 첫 번째 노드로 삽입합니다.
    addNode(head, 20); // 두 번째 노드로 삽입합니다.
    addNode(head, 30); // 세 번째 노드로 삽입합니다.
    addNode(head, 40); // 네 번째 노드로 삽입합니다.
    addNode(head, 50); // 다섯 번째 노드로 삽입합니다.

    // 연결 리스트의 모든 노드의 데이터를 출력합니다.
    node* curr = head->next;
    while (curr != NULL) {
        printf("현재 Node Data: %d\n", curr->data);
        curr = curr->next;
    }

    // 연결 리스트의 모든 노드를 삭제합니다.
    deleteNode(head);

    printf("모든 노드 삭제 완료.\n");
}
